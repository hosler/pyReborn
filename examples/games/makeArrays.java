import java.io.*;

public class makeArrays {
  static final int[] nowall = {
    0x0,0x1,0x8,0xf,0x10,0x18,0x1f,0x28,0x2f,
    0x30,0x31,0x38,0x3f,0x44,0x48,0x4f,0x58,0x5f,
    0x68,0x6f,0x72,0x78,0x7f,0x82,0x8f,0x92,0x9e,
    0x9f,0xa6,0xa8,0xa9,0xaa,0xab,0xad,0xb6,0xbd,
    0xc6,0xcd,0xd5,0xe6,0xe7,0xec,0xed,0xf0,0xf5,
    0xf6,0xf7,0xfc,0xfd,0x100,0x105,0x10b,0x10c,0x10d,
    0x110,0x11b,0x11c,0x11d,0x12b,0x12c,0x12d,0x134,0x138,
    0x13b,0x13c,0x13d,0x13e,0x13f,0x140,0x141,0x150,0x151,
    0x166,0x167,0x168,0x169,0x176,0x177,0x178,0x179,0x186,
    0x187,0x188,0x189,0x18e,0x18f,0x196,0x197,0x198,0x199,
    0x19b,0x19e,0x19f,0x1a4,0x1a5,0x1a6,0x1a7,0x1a8,0x1ab,
    0x1b4,0x1b5,0x1b6,0x1b7,0x1b8,0x1b9,0x1bb,0x1c4,0x1c5,
    0x1c6,0x1c7,0x1c8,0x1c9,0x1cc,0x1cd,0x1ce,0x1d4,0x1d7,
    0x1d8,0x1d9,0x1da,0x1e4,0x1e7,0x1e8,0x1e9,0x1ea,0x1ed,
    0x1ee,0x1ef,0x1f4,0x1f5,0x1f6,0x1f7,0x1f8,0x1f9,0x1fa,
    0x1ff,0x202,0x203,0x204,0x205,0x206,0x207,0x208,0x209,
    0x20a,0x20b,0x20c,0x20d,0x20e,0x20f,0x213,0x214,0x215,
    0x216,0x217,0x218,0x219,0x21a,0x21b,0x21c,0x21e,0x21f,
    0x222,0x223,0x224,0x225,0x226,0x227,0x228,0x229,0x22a,
    0x22b,0x22c,0x239,0x23d,0x28e,0x28f,0x29b,0x29c,0x2a5,
    0x2a6,0x2a7,0x2a8,0x2a9,0x2ae,0x2af,0x2b5,0x2b6,0x2b7,
    0x2b8,0x2c1,0x2c2,0x2d1,0x2d2,0x2db,0x2e1,0x2e2,0x2e6,
    0x2f1,0x2f2,0x2fa,0x335,0x33f,0x345,0x34f,0x364,0x365,
    0x36c,0x36d,0x374,0x375,0x37f,0x386,0x388,0x389,0x38a,
    0x38b,0x394,0x395,0x396,0x397,0x39a,0x39b,0x39d,0x3a4,
    0x3a5,0x3a6,0x3a7,0x3a8,0x3a9,0x3aa,0x3ab,0x3ac,0x3ad,
    0x3b2,0x3b3,0x3b4,0x3b5,0x3be,0x3bf,0x3c6,0x3c7,0x3f0,
    0x3f1,0x3f2,0x3ff,0x40b,0x40c,0x41b,0x41c,0x421,0x425,
    0x42b,0x434,0x488,0x489,0x48a,0x490,0x497,0x49f,0x4a0,
    0x4a7,0x4b0,0x4b7,0x4c0,0x4c7,0x4d0,0x4d7,0x4df,0x4e0,
    0x4e7,0x4e8,0x4ef,0x4f0,0x4f7,0x4f8,0x4ff,0x500,0x507,
    0x510,0x517,0x520,0x527,0x528,0x52b,0x530,0x537,0x540,
    0x547,0x627,0x64a,0x64f,0x656,0x657,0x658,0x659,0x65a,
    0x65f,0x666,0x667,0x66a,0x66f,0x690,0x691,0x694,0x6a4,
    0x6a9,0x6aa,0x6ab,0x6ac,0x6af,0x6b9,0x6ba,0x6bb,0x6c4,
    0x6c5,0x6c6,0x6c7,0x6d0,0x6d1,0x6d4,0x6d5,0x6d6,0x6d7,
    0x6dc,0x6df,0x6e0,0x6e1,0x6e6,0x6e7,0x6e8,0x6e9,0x6ea,
    0x6eb,0x6ec,0x6ef,0x6f0,0x6f1,0x6f6,0x6f7,0x6fa,0x6fb,
    0x70a,0x70b,0x71a,0x71b,0x72a,0x72b,0x73a,0x73b,0x7ff,
    };
  static final int[] swamp = {0x1a4,0x1a5,0x1b4,0x1b5,0x1e8,0x1e9,0x1f8,0x1f9,0x18e,0x1f4,0x1f5,0x198,0x199,0x1a8,0x1b8,0x1d8,0x1d9,0x19b,0x1ab,0x18f,0x1b9,0x1c8,0x1c9,0x1fa,};
  static final int[][] jumpstone = {{0xbe,0xbf,},{0xd4,0xe4,},{0xb9,0xba,},{0x111,0x121,},};
  static final int[][][] bushobj = {{{0x2,0x12,},{0x3,0x13,},},{{0x1a4,0x1b4,},{0x1a5,0x1b5,},},};
  static final int[][][] bushobjreplace = {{{0x2a5,0x2b5,},{0x2a6,0x2b6,},},{{0x2a7,0x2b7,},{0x2a8,0x2b8,},},};
  static final int[][][] liftobj = {{{0x2,0x12,},{0x3,0x13,},},{{0x200,0x210,},{0x201,0x211,},},{{0x2ac,0x2bc,},{0x2ad,0x2bd,},},{{0x22,0x32,},{0x23,0x33,},},};
  static final int[][][] liftobjreplace = {{{0x2a5,0x2b5,},{0x2a6,0x2b6,},},{{0x70a,0x71a,},{0x70b,0x71b,},},{{0x6ea,0x6fa,},{0x6eb,0x6fb,},},{{0x72a,0x73a,},{0x72b,0x73b,},},};
  static final int[] chestfields = {0x6f8,0x6f9,0x708,0x709,};
  static final int[][] chestreplace = {{0x33d,0x34d,},{0x33e,0x34e,},};
  static final int[][] movestone = {{0x6e4,0x6f4,},{0x6e5,0x6f5,},};

  static final int[][] spritevalues = {
    // no movement
    {(0<<16)+(6<<8)+17,(1<<16)+(18<<8)+8,(172<<16)+(4<<8)+8,(164<<16)+(4<<8)+1},
    {(0<<16)+(6<<8)+18,(2<<16)+(3<<8)+8, (173<<16)+(6<<8)+8,(165<<16)+(6<<8)+1},
    {(0<<16)+(6<<8)+17,(174<<16)+(4<<8)+8,(166<<16)+(4<<8)+1,(3<<16)+(4<<8)+12},
    {(0<<16)+(6<<8)+18,(4<<16)+(17<<8)+8,(175<<16)+(2<<8)+8,(167<<16)+(2<<8)+1},
    // walk 1
    {(0<<16)+(6<<8)+18,(1<<16)+(18<<8)+7,(176<<16)+(4<<8)+8,(164<<16)+(4<<8)+0},
    {(0<<16)+(6<<8)+18,(2<<16)+(3<<8)+6, (177<<16)+(5<<8)+8,(169<<16)+(5<<8)+0},
    {(0<<16)+(6<<8)+18,(178<<16)+(4<<8)+7,(166<<16)+(4<<8)+0,(3<<16)+(4<<8)+11},
    {(0<<16)+(6<<8)+18,(4<<16)+(17<<8)+6,(179<<16)+(2<<8)+8,(170<<16)+(3<<8)+0},
    // walk 2
    {(0<<16)+(6<<8)+18,(1<<16)+(18<<8)+8,(180<<16)+(4<<8)+8,(164<<16)+(4<<8)+1},
    {(0<<16)+(6<<8)+18,(2<<16)+(3<<8)+7 ,(181<<16)+(6<<8)+7,(165<<16)+(6<<8)+0},
    {(0<<16)+(6<<8)+18,(182<<16)+(4<<8)+8,(166<<16)+(4<<8)+1,(3<<16)+(4<<8)+13},
    {(0<<16)+(6<<8)+18,(4<<16)+(17<<8)+7,(183<<16)+(1<<8)+7,(167<<16)+(2<<8)+0},
    // walk 3
    {(0<<16)+(6<<8)+18,(1<<16)+(18<<8)+7,(184<<16)+(4<<8)+8,(164<<16)+(4<<8)+2},
    {(0<<16)+(6<<8)+18,(2<<16)+(3<<8)+8 ,(185<<16)+(6<<8)+9,(165<<16)+(6<<8)+1},
    {(0<<16)+(6<<8)+18,(186<<16)+(4<<8)+8,(166<<16)+(4<<8)+2,(3<<16)+(4<<8)+14},
    {(0<<16)+(6<<8)+18,(4<<16)+(17<<8)+8,(187<<16)+(1<<8)+9,(167<<16)+(2<<8)+1},
    // walk 4
    {(0<<16)+(6<<8)+18,(1<<16)+(18<<8)+9,(188<<16)+(4<<8)+8,(164<<16)+(4<<8)+2},
    {(0<<16)+(6<<8)+18,(2<<16)+(3<<8)+7 ,(189<<16)+(6<<8)+8,(165<<16)+(6<<8)+0},
    {(0<<16)+(6<<8)+18,(190<<16)+(4<<8)+8,(166<<16)+(4<<8)+1,(3<<16)+(4<<8)+13},
    {(0<<16)+(6<<8)+18,(4<<16)+(17<<8)+7,(191<<16)+(1<<8)+8,(167<<16)+(2<<8)+0},
    // walk 5
    {(0<<16)+(6<<8)+18,(1<<16)+(18<<8)+7,(192<<16)+(4<<8)+8,(164<<16)+(4<<8)+0},
    {(0<<16)+(6<<8)+18,(2<<16)+(3<<8)+7 ,(193<<16)+(5<<8)+8,(168<<16)+(6<<8)+1},
    {(0<<16)+(6<<8)+18,(194<<16)+(4<<8)+10,(166<<16)+(4<<8)+0,(3<<16)+(4<<8)+11},
    {(0<<16)+(6<<8)+18,(4<<16)+(17<<8)+7,(195<<16)+(2<<8)+8,(171<<16)+(2<<8)+1},

    // hit1
    {(0<<16)+(6<<8)+17,(4<<16)+(20<<8)+9,(21<<16)+(19<<8)+(-1&0xFF),(196<<16)+(4<<8)+8,(164<<16)+(4<<8)+0},
    {(0<<16)+(6<<8)+18,(17<<16)+((-1&0xFF)<<8)+0,(197<<16)+(6<<8)+8,(165<<16)+(6<<8)+2},
    {(0<<16)+(6<<8)+17,(2<<16)+(1<<8)+7,(206<<16)+(4<<8)+8,(166<<16)+(4<<8)+2,(5<<16)+((-2&0xFF)<<8)+12},
    {(0<<16)+(6<<8)+18,(15<<16)+(11<<8)+0,(199<<16)+(3<<8)+8,(167<<16)+(2<<8)+2},
    // hit2
    {(0<<16)+(6<<8)+17,(4<<16)+(20<<8)+7,(19<<16)+(7<<8)+(-9&0xFF),(200<<16)+(4<<8)+8,(164<<16)+(4<<8)+(-1&0xFF)},
    {(0<<16)+(6<<8)+18,(16<<16)+((-8&0xFF)<<8)+0,(197<<16)+(6<<8)+8,(165<<16)+(4<<8)+2},
    {(0<<16)+(6<<8)+17,(2<<16)+(1<<8)+7,(206<<16)+(4<<8)+8,(166<<16)+(4<<8)+2,(6<<16)+((-1&0xFF)<<8)+19},
    {(0<<16)+(6<<8)+18,(14<<16)+(18<<8)+0,(199<<16)+(3<<8)+8,(167<<16)+(4<<8)+2},
    // hit3
    {(0<<16)+(6<<8)+17,(4<<16)+(20<<8)+5,(7<<16)+(4<<8)+(-12&0xFF),(204<<16)+(4<<8)+8,(164<<16)+(4<<8)+(-4&0xFF)},
    {(0<<16)+(6<<8)+18,(20<<16)+((-9&0xFF)<<8)+13,(201<<16)+(6<<8)+8,(165<<16)+(1<<8)+3},
    {(0<<16)+(6<<8)+17,(2<<16)+(1<<8)+7,(210<<16)+(4<<8)+8,(198<<16)+(4<<8)+5,(8<<16)+(13<<8)+24},
    {(0<<16)+(6<<8)+18,(12<<16)+(19<<8)+13,(203<<16)+(3<<8)+8,(167<<16)+(7<<8)+3},
    // hit4
    {(0<<16)+(6<<8)+17,(4<<16)+(20<<8)+10,(18<<16)+(0<<8)+(-7&0xFF),(200<<16)+(4<<8)+8,(164<<16)+(4<<8)+(-1&0xFF)},
    {(0<<16)+(6<<8)+18,(205<<16)+(6<<8)+8,(165<<16)+(5<<8)+2,(5<<16)+((-7&0xFF)<<8)+16},
    {(0<<16)+(6<<8)+17,(2<<16)+(1<<8)+7,(214<<16)+(4<<8)+8,(198<<16)+(4<<8)+2,(13<<16)+(16<<8)+19},
    {(0<<16)+(6<<8)+18,(207<<16)+(3<<8)+8,(167<<16)+(3<<8)+2,(11<<16)+(17<<8)+16},
    // hit5
    {(0<<16)+(6<<8)+17,(4<<16)+(20<<8)+9,(16<<16)+((-8&0xFF)<<8)+0,(208<<16)+(4<<8)+8,(164<<16)+(4<<8)+1},
    {(0<<16)+(6<<8)+18,(205<<16)+(6<<8)+8,(165<<16)+(5<<8)+2,(6<<16)+((-2&0xFF)<<8)+21},
    {(0<<16)+(6<<8)+17,(2<<16)+(1<<8)+7,(218<<16)+(4<<8)+8,(202<<16)+(4<<8)+1,(9<<16)+(21<<8)+15},
    {(0<<16)+(6<<8)+18,(207<<16)+(3<<8)+8,(167<<16)+(3<<8)+2,(10<<16)+(12<<8)+21},

    // Pushing1
    {(0<<16)+(6<<8)+17,(224<<16)+(4<<8)+8,(220<<16)+(4<<8)+0},
    {(0<<16)+(6<<8)+18,(225<<16)+(4<<8)+8,(221<<16)+(4<<8)+0},
    {(0<<16)+(6<<8)+17,(226<<16)+(4<<8)+8,(222<<16)+(4<<8)+2},
    {(0<<16)+(6<<8)+18,(227<<16)+(4<<8)+8,(223<<16)+(4<<8)+0},
    // Pushing2
    {(0<<16)+(6<<8)+17,(228<<16)+(4<<8)+8,(220<<16)+(4<<8)+1},
    {(0<<16)+(6<<8)+18,(229<<16)+(4<<8)+8,(221<<16)+(4<<8)+1},
    {(0<<16)+(6<<8)+17,(230<<16)+(4<<8)+8,(222<<16)+(4<<8)+3},
    {(0<<16)+(6<<8)+18,(231<<16)+(4<<8)+8,(223<<16)+(4<<8)+1},
    // Pushing3
    {(0<<16)+(6<<8)+17,(232<<16)+(4<<8)+8,(220<<16)+(4<<8)+2},
    {(0<<16)+(6<<8)+18,(233<<16)+(4<<8)+8,(221<<16)+(4<<8)+2},
    {(0<<16)+(6<<8)+17,(234<<16)+(4<<8)+8,(222<<16)+(4<<8)+4},
    {(0<<16)+(6<<8)+18,(235<<16)+(4<<8)+8,(223<<16)+(4<<8)+2},

    // Pulling1
    {(0<<16)+(6<<8)+17,(238<<16)+(4<<8)+8,(213<<16)+(4<<8)+1},
    {(0<<16)+(6<<8)+18,(225<<16)+(5<<8)+8,(165<<16)+(4<<8)+1},
    {(0<<16)+(6<<8)+17,(226<<16)+(4<<8)+8,(217<<16)+(4<<8)+3},
    {(0<<16)+(6<<8)+18,(227<<16)+(3<<8)+8,(167<<16)+(4<<8)+1},
    // Pulling2
    {(0<<16)+(6<<8)+17,(156<<16)+(4<<8)+0},
    {(0<<16)+(5<<8)+18,(237<<16)+(4<<8)+8,(236<<16)+(8<<8)+1},
    {(0<<16)+(6<<8)+17,(211<<16)+(4<<8)+8,(222<<16)+(4<<8)+2},
    {(0<<16)+(7<<8)+18,(219<<16)+(4<<8)+8,(215<<16)+(0<<8)+1},
    // Pulling3
    {(0<<16)+(6<<8)+17,(156<<16)+(4<<8)+0,(45<<16)+(0<<8)+7,(46<<16)+(18<<8)+7},
    {(0<<16)+(5<<8)+18,(237<<16)+(4<<8)+8,(236<<16)+(8<<8)+1,(46<<16)+(20<<8)+15},
    {(0<<16)+(6<<8)+17,(211<<16)+(4<<8)+8,(222<<16)+(4<<8)+2,(43<<16)+(0<<8)+8,(44<<16)+(18<<8)+8},
    {(0<<16)+(7<<8)+18,(219<<16)+(4<<8)+8,(215<<16)+(0<<8)+1,(45<<16)+((-2&0xFF)<<8)+15},
    // Pulling4
    {(0<<16)+(6<<8)+17,(156<<16)+(4<<8)+0,(45<<16)+((-3&0xFF)<<8)+12,(46<<16)+(21<<8)+12},
    {(0<<16)+(5<<8)+18,(237<<16)+(4<<8)+8,(236<<16)+(8<<8)+1,(46<<16)+(22<<8)+17},
    {(0<<16)+(6<<8)+17,(211<<16)+(4<<8)+8,(222<<16)+(4<<8)+2,(43<<16)+((-3&0xFF)<<8)+3,(44<<16)+(21<<8)+3},
    {(0<<16)+(7<<8)+18,(219<<16)+(4<<8)+8,(215<<16)+(0<<8)+1,(45<<16)+((-4&0xFF)<<8)+17},

    // Carrying1, no movement
    {(0<<16)+(6<<8)+17,(248<<16)+(4<<8)+8,(244<<16)+(4<<8)+0},
    {(0<<16)+(6<<8)+18,(249<<16)+(5<<8)+8,(245<<16)+(6<<8)+0},
    {(0<<16)+(6<<8)+17,(250<<16)+(4<<8)+8,(246<<16)+(4<<8)+0},
    {(0<<16)+(6<<8)+18,(251<<16)+(3<<8)+8,(247<<16)+(2<<8)+0},
    // Carrying2
    {(0<<16)+(6<<8)+18,(252<<16)+(4<<8)+8,(244<<16)+(4<<8)+1},
    {(0<<16)+(6<<8)+18,(253<<16)+(5<<8)+7,(245<<16)+(6<<8)+0},
    {(0<<16)+(6<<8)+18,(254<<16)+(4<<8)+8,(246<<16)+(4<<8)+1},
    {(0<<16)+(6<<8)+18,(255<<16)+(3<<8)+7,(247<<16)+(2<<8)+0},
    // Carrying3
    {(0<<16)+(6<<8)+18,(256<<16)+(4<<8)+8,(244<<16)+(4<<8)+2},
    {(0<<16)+(6<<8)+18,(257<<16)+(5<<8)+7,(245<<16)+(6<<8)+1},
    {(0<<16)+(6<<8)+18,(258<<16)+(4<<8)+8,(246<<16)+(4<<8)+2},
    {(0<<16)+(6<<8)+18,(259<<16)+(3<<8)+7,(247<<16)+(2<<8)+1},
    // Carrying4
    {(0<<16)+(6<<8)+18,(260<<16)+(4<<8)+8,(244<<16)+(4<<8)+1},
    {(0<<16)+(6<<8)+18,(253<<16)+(5<<8)+7,(245<<16)+(6<<8)+0},
    {(0<<16)+(6<<8)+18,(262<<16)+(4<<8)+8,(246<<16)+(4<<8)+1},
    {(0<<16)+(6<<8)+18,(255<<16)+(3<<8)+7,(247<<16)+(2<<8)+0},
    // Carrying5
    {(0<<16)+(6<<8)+18,(264<<16)+(4<<8)+8,(244<<16)+(4<<8)+2},
    {(0<<16)+(6<<8)+18,(257<<16)+(5<<8)+7,(245<<16)+(6<<8)+1},
    {(0<<16)+(6<<8)+18,(266<<16)+(4<<8)+8,(246<<16)+(4<<8)+2},
    {(0<<16)+(6<<8)+18,(259<<16)+(3<<8)+7,(247<<16)+(2<<8)+1},
    // Lifting
    {(0<<16)+(6<<8)+18,(240<<16)+(4<<8)+8,(220<<16)+(4<<8)+2},
    {(0<<16)+(6<<8)+18,(241<<16)+(5<<8)+8,(221<<16)+(6<<8)+2},
    {(0<<16)+(6<<8)+18,(242<<16)+(4<<8)+8,(222<<16)+(4<<8)+3},
    {(0<<16)+(6<<8)+18,(243<<16)+(3<<8)+8,(223<<16)+(2<<8)+2},

    // Dart-Shooting
    {(0<<16)+(6<<8)+17,(111<<16)+((-1&0xFF)<<8)+9,(224<<16)+(4<<8)+8,(164<<16)+(4<<8)+1},
    {(0<<16)+(6<<8)+18,(233<<16)+(6<<8)+6,(165<<16)+(6<<8)+1,(112<<16)+(2<<8)+7},
    {(0<<16)+(6<<8)+17,(206<<16)+(4<<8)+8,(166<<16)+(4<<8)+1,(113<<16)+(6<<8)+14},
    {(0<<16)+(6<<8)+18,(235<<16)+(2<<8)+6,(167<<16)+(2<<8)+1,(114<<16)+(15<<8)+7},
    };
  static final int[][] hurtsprites = {
    {(0<<16)+(6<<8)+18,(160<<16)+(4<<8)+0},
    {(0<<16)+(6<<8)+18,(161<<16)+(4<<8)+0},
    {(0<<16)+(6<<8)+18,(162<<16)+(4<<8)+0},
    {(0<<16)+(6<<8)+18,(163<<16)+(4<<8)+0},
    };
  static final int[][][] leapsfly = {{
    {(25<<16)+(0<<8)+4,(25<<16)+(6<<8)+0,(26<<16)+(6<<8)+8,(26<<16)+(9<<8)+17},
    {(25<<16)+((-2&0xFF)<<8)+4,(25<<16)+(4<<8)+(-4&0xFF),(26<<16)+(8<<8)+10,(26<<16)+(9<<8)+19},
    {(26<<16)+((-4&0xFF)<<8)+4,(25<<16)+(2<<8)+(-8&0xFF),(26<<16)+(10<<8)+12,(26<<16)+(9<<8)+21},
    {(25<<16)+((-5&0xFF)<<8)+4,(25<<16)+(1<<8)+(-10&0xFF),(25<<16)+(9<<8)+13,(25<<16)+(9<<8)+22},
    {(25<<16)+((-6&0xFF)<<8)+4,(25<<16)+(0<<8)+(-12&0xFF),(25<<16)+(10<<8)+14,(25<<16)+(10<<8)+23},
    {(26<<16)+((-7&0xFF)<<8)+4,(25<<16)+((-1&0xFF)<<8)+(-14&0xFF),(26<<16)+(10<<8)+15,(26<<16)+(10<<8)+24},
    {(26<<16)+((-8&0xFF)<<8)+4,(25<<16)+((-2&0xFF)<<8)+(-16&0xFF),(26<<16)+(10<<8)+22,(26<<16)+(10<<8)+25},
    },{
    {(24<<16)+(0<<8)+8,(24<<16)+(8<<8)+0,(24<<16)+(12<<8)+8},
    {(24<<16)+((-2&0xFF)<<8)+8,(24<<16)+(8<<8)+(-2&0xFF),(24<<16)+(14<<8)+8},
    {(24<<16)+((-4&0xFF)<<8)+8,(24<<16)+(8<<8)+(-4&0xFF),(24<<16)+(16<<8)+8},
    {(24<<16)+((-6&0xFF)<<8)+8,(24<<16)+(8<<8)+(-6&0xFF),(24<<16)+(18<<8)+8},
    },{
    {(96<<16)+((-1&0xFF)<<8)+0,(96<<16)+(0<<8)+9,(98<<16)+(9<<8)+(-1&0xFF),(98<<16)+(10<<8)+8},
    {(99<<16)+((-3&0xFF)<<8)+(-2&0xFF),(99<<16)+((-2&0xFF)<<8)+11,(97<<16)+(11<<8)+(-3&0xFF),(97<<16)+(12<<8)+10},
    {(96<<16)+((-5&0xFF)<<8)+(-4&0xFF),(96<<16)+((-4&0xFF)<<8)+13,(98<<16)+(13<<8)+(-5&0xFF),(98<<16)+(14<<8)+12},
    {(99<<16)+((-7&0xFF)<<8)+(-6&0xFF),(99<<16)+((-6&0xFF)<<8)+15,(97<<16)+(15<<8)+(-7&0xFF),(97<<16)+(16<<8)+14},
    },{
    {(100<<16)+((-1&0xFF)<<8)+0,(100<<16)+(0<<8)+9,(102<<16)+(9<<8)+(-1&0xFF),(102<<16)+(10<<8)+8},
    {(103<<16)+((-3&0xFF)<<8)+(-2&0xFF),(103<<16)+((-2&0xFF)<<8)+11,(101<<16)+(11<<8)+(-3&0xFF),(101<<16)+(12<<8)+10},
    {(100<<16)+((-5&0xFF)<<8)+(-4&0xFF),(100<<16)+((-4&0xFF)<<8)+13,(102<<16)+(13<<8)+(-5&0xFF),(102<<16)+(14<<8)+12},
    {(103<<16)+((-7&0xFF)<<8)+(-6&0xFF),(103<<16)+((-6&0xFF)<<8)+15,(101<<16)+(15<<8)+(-7&0xFF),(101<<16)+(16<<8)+14},
    },{
    {(132<<16)+(0<<8)+0,(133<<16)+(10<<8)+0,(134<<16)+(0<<8)+9,(135<<16)+(10<<8)+9},
    {(132<<16)+((-4&0xFF)<<8)+(-4&0xFF),(133<<16)+(14<<8)+(-4&0xFF),(134<<16)+((-4&0xFF)<<8)+13,(135<<16)+(14<<8)+13},
    {(132<<16)+((-8&0xFF)<<8)+(-8&0xFF),(133<<16)+(18<<8)+(-8&0xFF),(134<<16)+((-8&0xFF)<<8)+17,(135<<16)+(18<<8)+17},
    {(132<<16)+((-12&0xFF)<<8)+(-12&0xFF),(133<<16)+(22<<8)+(-12&0xFF),(134<<16)+((-12&0xFF)<<8)+21,(135<<16)+(22<<8)+21},
    }};
  static final int[][] compusprites = {
    // Normal soldier
    {(0<<16)+(2<<8)+10,(60<<16)+(13<<8)+(-16&0xFF),(104<<16)+((-3&0xFF)<<8)+(-3&0xFF),(52<<16)+((-3&0xFF)<<8)+(-1&0xFF),(48<<16)+(0<<8)+(-9&0xFF)},
    {(0<<16)+(2<<8)+10,(106<<16)+((-2&0xFF)<<8)+(-2&0xFF),(53<<16)+(2<<8)+3,(49<<16)+(0<<8)+(-10&0xFF),(61<<16)+((-11&0xFF)<<8)+7},
    {(0<<16)+(2<<8)+10,(58<<16)+((-3&0xFF)<<8)+2,(50<<16)+(0<<8)+(-8&0xFF),(104<<16)+(10<<8)+4,(62<<16)+((-3&0xFF)<<8)+10},
    {(0<<16)+(2<<8)+10,(105<<16)+(13<<8)+(-2&0xFF),(55<<16)+(1<<8)+3,(51<<16)+(0<<8)+(-10&0xFF),(63<<16)+(11<<8)+7},

    {(0<<16)+(2<<8)+10,(60<<16)+(13<<8)+(-11&0xFF),(104<<16)+((-3&0xFF)<<8)+(-2&0xFF),(56<<16)+((-3&0xFF)<<8)+2,(48<<16)+(0<<8)+(-9&0xFF)},
    {(0<<16)+(2<<8)+10,(106<<16)+((-1&0xFF)<<8)+(-2&0xFF),(57<<16)+((-1&0xFF)<<8)+0,(49<<16)+(0<<8)+(-11&0xFF),(61<<16)+((-16&0xFF)<<8)+5},
    {(0<<16)+(2<<8)+10,(54<<16)+((-3&0xFF)<<8)+2,(50<<16)+(0<<8)+(-9&0xFF),(104<<16)+(10<<8)+4,(62<<16)+((-3&0xFF)<<8)+8},
    {(0<<16)+(2<<8)+10,(105<<16)+(13<<8)+(-2&0xFF),(59<<16)+(1<<8)+0,(51<<16)+(0<<8)+(-11&0xFF),(63<<16)+(16<<8)+5},

    // Shooting Soldier
    {(0<<16)+(2<<8)+10,(111<<16)+(6<<8)+(-6&0xFF),(107<<16)+(12<<8)+(-12&0xFF),(52<<16)+((-3&0xFF)<<8)+(-1&0xFF),(48<<16)+(0<<8)+(-9&0xFF)},
    {(0<<16)+(2<<8)+10,(53<<16)+(2<<8)+3,(49<<16)+(0<<8)+(-10&0xFF),(112<<16)+((-4&0xFF)<<8)+(-5&0xFF),(108<<16)+((-10&0xFF)<<8)+0},
    {(0<<16)+(2<<8)+10,(58<<16)+((-3&0xFF)<<8)+2,(50<<16)+(0<<8)+(-8&0xFF),(113<<16)+((-1&0xFF)<<8)+6,(109<<16)+(4<<8)+3},
    {(0<<16)+(2<<8)+10,(55<<16)+(1<<8)+3,(51<<16)+(0<<8)+(-10&0xFF),(114<<16)+(13<<8)+(-5&0xFF),(110<<16)+(11<<8)+0},

    {(0<<16)+(2<<8)+10,(111<<16)+(6<<8)+(-6&0xFF),(107<<16)+(12<<8)+(-12&0xFF),(56<<16)+((-3&0xFF)<<8)+2,(48<<16)+(0<<8)+(-9&0xFF)},
    {(0<<16)+(2<<8)+10,(57<<16)+((-1&0xFF)<<8)+0,(49<<16)+(0<<8)+(-11&0xFF),(112<<16)+((-4&0xFF)<<8)+(-6&0xFF),(108<<16)+((-10&0xFF)<<8)+(-1&0xFF)},
    {(0<<16)+(2<<8)+10,(54<<16)+((-3&0xFF)<<8)+2,(50<<16)+(0<<8)+(-9&0xFF),(113<<16)+((-1&0xFF)<<8)+5,(109<<16)+(4<<8)+2},
    {(0<<16)+(2<<8)+10,(59<<16)+(1<<8)+0,(51<<16)+(0<<8)+(-11&0xFF),(114<<16)+(13<<8)+(-6&0xFF),(110<<16)+(11<<8)+(-1&0xFF)},

    // Octopus
    {(0<<16)+(2<<8)+10,(117<<16)+(0<<8)+(-1&0xFF)},
    {(0<<16)+(2<<8)+10,(118<<16)+(0<<8)+(-1&0xFF)},
    {(0<<16)+(2<<8)+10,(119<<16)+(0<<8)+(-1&0xFF)},
    {(0<<16)+(2<<8)+10,(120<<16)+(0<<8)+(-1&0xFF)},

    {(0<<16)+(2<<8)+10,(121<<16)+(0<<8)+(-1&0xFF)},
    {(0<<16)+(2<<8)+10,(122<<16)+(0<<8)+(-1&0xFF)},
    {(0<<16)+(2<<8)+10,(123<<16)+(0<<8)+(-1&0xFF)},
    {(0<<16)+(2<<8)+10,(124<<16)+(0<<8)+(-1&0xFF)},

    {(0<<16)+(2<<8)+10,(117<<16)+(0<<8)+(-1&0xFF)},
    {(0<<16)+(2<<8)+10,(125<<16)+(0<<8)+(-1&0xFF)},
    {(0<<16)+(2<<8)+10,(126<<16)+(0<<8)+(-1&0xFF)},
    {(0<<16)+(2<<8)+10,(127<<16)+(0<<8)+(-1&0xFF)},

    {(0<<16)+(2<<8)+10,(117<<16)+(0<<8)+(-1&0xFF)},
    {(0<<16)+(2<<8)+10,(128<<16)+(0<<8)+(-1&0xFF)},
    {(0<<16)+(2<<8)+10,(129<<16)+(0<<8)+(-1&0xFF)},
    {(0<<16)+(2<<8)+10,(130<<16)+(0<<8)+(-1&0xFF)},
    };
  static final int[][] bumpedsprites = {
    {(27<<16)+(8<<8)+(-10&0xFF),(28<<16)+(6<<8)+(-12&0xFF),(29<<16)+(5<<8)+(-13&0xFF),(30<<16)+(4<<8)+(-14&0xFF)},
    {(27<<16)+((-12&0xFF)<<8)+8,(28<<16)+((-14&0xFF)<<8)+6,(29<<16)+((-15&0xFF)<<8)+5,(30<<16)+((-16&0xFF)<<8)+4},
    {(27<<16)+(8<<8)+26,(28<<16)+(6<<8)+24,(29<<16)+(5<<8)+23,(30<<16)+(4<<8)+22},
    {(27<<16)+(28<<8)+8,(28<<16)+(26<<8)+6,(29<<16)+(25<<8)+5,(30<<16)+(24<<8)+4},
    };
  static final int[][] compexplosing = {
    {(31<<16)+(0<<8)+(-1&0xFF)},
    {(32<<16)+(0<<8)+(-1&0xFF)},
    {(33<<16)+(0<<8)+0},
    {(34<<16)+((-3&0xFF)<<8)+(-4&0xFF),(35<<16)+(11<<8)+(-4&0xFF),(36<<16)+((-3&0xFF)<<8)+10,(37<<16)+(11<<8)+10},
    {(38<<16)+((-6&0xFF)<<8)+(-7&0xFF),(39<<16)+(14<<8)+(-7&0xFF),(40<<16)+((-6&0xFF)<<8)+13,(41<<16)+(14<<8)+13},
    };
  static final int[][] swampsoldier = {
    {(115<<16)+(0<<8)+7},
    {(116<<16)+(0<<8)+7},
    {(48<<16)+(0<<8)+(-4&0xFF),(115<<16)+(0<<8)+7},
    {(48<<16)+(0<<8)+0,(115<<16)+(0<<8)+7},
    };


  public static void main(String[] args) {
    Object opti = new makeArrays();
  }

  makeArrays() {
    convertArrays();
    System.exit(0);
  }

  private void convertArrays() {
    try{
    RandomAccessFile file = new RandomAccessFile("arrays.dat","rw");

    file.writeInt(nowall.length);
    for (int i=0; i<nowall.length; i++) file.writeInt(nowall[i]);

    file.writeInt(swamp.length);
    for (int i=0; i<swamp.length; i++) file.writeInt(swamp[i]);

    file.writeInt((1<<16)+jumpstone.length);
    for (int i=0; i<jumpstone.length; i++) {
      file.writeInt(jumpstone[i].length);
      for (int j=0; j<jumpstone[i].length; j++)
        file.writeInt(jumpstone[i][j]);
    }

    file.writeInt((1<<16)+bushobj.length);
    for (int i=0; i<bushobj.length; i++) {
      file.writeInt((1<<16)+bushobj[i].length);
      for (int j=0; j<bushobj[i].length; j++) {
        file.writeInt(bushobj[i][j].length);
        for (int k=0; k<bushobj[i][j].length; k++)
          file.writeInt(bushobj[i][j][k]);
      }
    }

    file.writeInt((1<<16)+bushobjreplace.length);
    for (int i=0; i<bushobjreplace.length; i++) {
      file.writeInt((1<<16)+bushobjreplace[i].length);
      for (int j=0; j<bushobjreplace[i].length; j++) {
        file.writeInt(bushobjreplace[i][j].length);
        for (int k=0; k<bushobjreplace[i][j].length; k++)
          file.writeInt(bushobjreplace[i][j][k]);
      }
    }

    file.writeInt((1<<16)+liftobj.length);
    for (int i=0; i<liftobj.length; i++) {
      file.writeInt((1<<16)+liftobj[i].length);
      for (int j=0; j<liftobj[i].length; j++) {
        file.writeInt(liftobj[i][j].length);
        for (int k=0; k<liftobj[i][j].length; k++)
          file.writeInt(liftobj[i][j][k]);
      }
    }

    file.writeInt((1<<16)+liftobjreplace.length);
    for (int i=0; i<liftobjreplace.length; i++) {
      file.writeInt((1<<16)+liftobjreplace[i].length);
      for (int j=0; j<liftobjreplace[i].length; j++) {
        file.writeInt(liftobjreplace[i][j].length);
        for (int k=0; k<liftobjreplace[i][j].length; k++)
          file.writeInt(liftobjreplace[i][j][k]);
      }
    }

    file.writeInt(chestfields.length);
    for (int i=0; i<chestfields.length; i++) file.writeInt(chestfields[i]);

    file.writeInt((1<<16)+chestreplace.length);
    for (int i=0; i<chestreplace.length; i++) {
      file.writeInt(chestreplace[i].length);
      for (int j=0; j<chestreplace[i].length; j++)
        file.writeInt(chestreplace[i][j]);
    }

    file.writeInt((1<<16)+movestone.length);
    for (int i=0; i<movestone.length; i++) {
      file.writeInt(movestone[i].length);
      for (int j=0; j<movestone[i].length; j++)
        file.writeInt(movestone[i][j]);
    }

//---

    file.writeInt((1<<16)+spritevalues.length);
    for (int i=0; i<spritevalues.length; i++) {
      file.writeInt(spritevalues[i].length);
      for (int j=0; j<spritevalues[i].length; j++)
        file.writeInt(spritevalues[i][j]);
    }

    file.writeInt((1<<16)+hurtsprites.length);
    for (int i=0; i<hurtsprites.length; i++) {
      file.writeInt(hurtsprites[i].length);
      for (int j=0; j<hurtsprites[i].length; j++)
        file.writeInt(hurtsprites[i][j]);
    }

    file.writeInt((1<<16)+leapsfly.length);
    for (int i=0; i<leapsfly.length; i++) {
      file.writeInt((1<<16)+leapsfly[i].length);
      for (int j=0; j<leapsfly[i].length; j++) {
        file.writeInt(leapsfly[i][j].length);
        for (int k=0; k<leapsfly[i][j].length; k++)
          file.writeInt(leapsfly[i][j][k]);
      }
    }

    file.writeInt((1<<16)+compusprites.length);
    for (int i=0; i<compusprites.length; i++) {
      file.writeInt(compusprites[i].length);
      for (int j=0; j<compusprites[i].length; j++)
        file.writeInt(compusprites[i][j]);
    }

    file.writeInt((1<<16)+bumpedsprites.length);
    for (int i=0; i<bumpedsprites.length; i++) {
      file.writeInt(bumpedsprites[i].length);
      for (int j=0; j<bumpedsprites[i].length; j++)
        file.writeInt(bumpedsprites[i][j]);
    }

    file.writeInt((1<<16)+compexplosing.length);
    for (int i=0; i<compexplosing.length; i++) {
      file.writeInt(compexplosing[i].length);
      for (int j=0; j<compexplosing[i].length; j++)
        file.writeInt(compexplosing[i][j]);
    }

    file.writeInt((1<<16)+swampsoldier.length);
    for (int i=0; i<swampsoldier.length; i++) {
      file.writeInt(swampsoldier[i].length);
      for (int j=0; j<swampsoldier[i].length; j++)
        file.writeInt(swampsoldier[i][j]);
    }
    file.close();
    } catch (Exception e) { e.printStackTrace(); }
  }

} 




